Agent学习

（接受输入，思考，输出）+记忆+工具+规划
prompt （少样本提示、思维链、思维树...）
主要是不光要写好prompt，还要写好策略。

tools (自己使用)

memory （自己管理，进度）

plan （自己干预）

一个人的视角
一个项目经理的视角

感知 规划 行动 观察

Agnet的目的，为了处理那些简单的语言模型可能无法直接解决的问题，当任务涉及到多个步骤或者需要外部数据源的情况。

需要思考任务何时可以终止。


--------------------------------------------------------------------------------------------------

memory = ConversationBufferMemory(
    memory_key="chat_history",
    return_messages=True
)


tools = [
    Tool(
        name = "Search",
        func=search.run,
        description="useful for when you need to answer questions about current events or the current state of the world"
    ),
    Tool(
        name="Calculator",
        func=llm_math_chain.run,
        description="useful for when you need to answer questions about math"
    ),
]



agent_chain = initialize_agent(
    tools,
    llm,
    agent=AgentType.OPENAI_FUNCTIONS,
    verbose=True,
    handle_parsing_errors=True,#处理解析错误
    agent_kwargs={
        "extra_prompt_messages":[MessagesPlaceholder(variable_name="chat_history"),MessagesPlaceholder(variable_name="agent_scratchpad")],
    },
    memory=memory #记忆组件
    )

====================================================================================================


Function Calling 赋予大语言模型调用外部API的能力。
书写规则：
1、明确的函数名：选择一个清晰、描述性强的函数名。
2、参数顺序和命名：参数应有逻辑顺序，并使用描述性强的名称。
3、详细的函数描述：对函数功能和调协的参数变量有明确的说明。




